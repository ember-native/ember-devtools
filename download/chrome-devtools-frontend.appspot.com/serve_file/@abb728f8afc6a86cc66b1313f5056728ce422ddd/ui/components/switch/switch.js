import*as e from"../../lit-html/lit-html.js";import*as s from"../../visual_logging/visual_logging.js";const t=new CSSStyleSheet;t.replaceSync(':host{position:relative;display:inline-block;width:26px;height:var(--sys-size-8)}input{opacity:0%;width:0;height:0}.slider{box-sizing:border-box;position:absolute;cursor:pointer;left:0;top:0;width:100%;height:100%;background-color:var(--sys-color-surface-variant);border:1px solid var(--sys-color-outline);border-radius:var(--sys-shape-corner-full);transition:background-color 80ms linear}.slider::before{position:absolute;content:"";height:var(--sys-size-5);width:var(--sys-size-5);border-radius:var(--sys-shape-corner-full);top:calc(50% - 4px);left:3px;background-color:var(--sys-color-outline);transition:transform 80ms linear,background-color 80ms linear,width 80ms linear,height 80ms linear,top 80ms linear,left 80ms linear}input:focus-visible + .slider{outline:2px solid var(--sys-color-state-focus-ring);outline-offset:2px}input:checked{& + .slider{background-color:var(--sys-color-primary);border:1px solid var(--sys-color-primary)}& + .slider::before{left:11px;height:var(--sys-size-6);width:var(--sys-size-6);top:calc(50% - 6px);background-color:var(--sys-color-on-primary)}}input:disabled:not(:checked){& + .slider{background-color:transparent;border-color:var(--sys-color-state-disabled)}& + .slider::before{background-color:var(--sys-color-state-disabled)}}input:disabled:checked{& + .slider{background-color:var(--sys-color-state-disabled-container);border-color:transparent}& + .slider::before{background-color:var(--sys-color-surface)}}\n/*# sourceURL=switch.css */\n');class o extends Event{checked;static eventName="switchchange";constructor(e){super(o.eventName),this.checked=e}}class r extends HTMLElement{static litTagName=e.literal`devtools-switch`;#e=this.attachShadow({mode:"open"});#s=!1;#t=!1;#o="";connectedCallback(){this.#e.adoptedStyleSheets=[t],this.#r()}set checked(e){this.#s=e,this.#r()}get checked(){return this.#s}set disabled(e){this.#t=e,this.#r()}get disabled(){return this.#t}get jslogContext(){return this.#o}set jslogContext(e){this.#o=e,this.#r()}#i=e=>{this.#s=e.target.checked,this.dispatchEvent(new o(this.#s))};#r(){const t=this.#o&&s.toggle(this.#o).track({change:!0});e.render(e.html`
    <label role="button">
      <input type="checkbox"
        @change=${this.#i}
        ?disabled=${this.#t}
        .checked=${this.#s}
        jslog=${t||e.nothing}>
      <span class="slider" @click=${e=>e.stopPropagation()}></span>
    </label>
    `,this.#e,{host:this})}}customElements.define("devtools-switch",r);var i=Object.freeze({__proto__:null,SwitchChangeEvent:o,Switch:r});export{i as Switch};
