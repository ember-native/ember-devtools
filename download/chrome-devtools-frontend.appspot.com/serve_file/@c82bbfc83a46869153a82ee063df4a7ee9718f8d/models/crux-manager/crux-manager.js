import*as t from"../../core/common/common.js";import*as e from"../../core/sdk/sdk.js";let n;const r=["ALL","DESKTOP","PHONE"],i=["origin","url"],a=["largest_contentful_paint","cumulative_layout_shift","interaction_to_next_paint","round_trip_time","form_factors"];class o extends t.ObjectWrapper.ObjectWrapper{#t=new Map;#e=new Map;#n;#r;#i="https://chromeuxreport.googleapis.com/v1/records:queryRecord?key=AIzaSyCCSOx25vrb5z0tbedCB3_JRzzbVW6Uwgw";constructor(){super();const n=t.Settings.Settings.instance().getHostConfig(),r=!n||!0===n.isOffTheRecord?"Session":"Global";this.#r=t.Settings.Settings.instance().createSetting("field-data",{enabled:!1,override:"",originMappings:[]},r),this.#r.addChangeListener((()=>{this.#a()})),e.TargetManager.TargetManager.instance().addModelListener(e.ResourceTreeModel.ResourceTreeModel,e.ResourceTreeModel.Events.FrameNavigated,this.#o,this)}static instance(t={forceNew:null}){const{forceNew:e}=t;return n&&!e||(n=new o),n}getConfigSetting(){return this.#r}isEnabled(){return this.#r.get().enabled}async getFieldDataForPage(t){const e={"origin-ALL":null,"origin-DESKTOP":null,"origin-PHONE":null,"origin-TABLET":null,"url-ALL":null,"url-DESKTOP":null,"url-PHONE":null,"url-TABLET":null};try{const n=this.#s(t),a=[];for(const t of i)for(const i of r){const r=this.#c(n,t,i).then((n=>{e[`${t}-${i}`]=n}));a.push(r)}await Promise.all(a)}catch(t){console.error(t)}finally{return e}}#g(t){try{const e=new URL(t),n=(this.#r.get().originMappings||[]).find((t=>t.developmentOrigin===e.origin));if(!n)return t;const r=new URL(n.productionOrigin);return r.pathname=e.pathname,r.href}catch{return t}}async getFieldDataForCurrentPage(){const t=this.#r.get().override||this.#g(this.#n||await this.#l());return this.getFieldDataForPage(t)}async#l(){const t=e.TargetManager.TargetManager.instance();let n=t.inspectedURL();return n||(n=await new Promise((e=>{t.addEventListener("InspectedURLChanged",(function n(r){const i=r.data.inspectedURL();i&&(e(i),t.removeEventListener("InspectedURLChanged",n))}))}))),n}async#o(t){t.data.isPrimaryFrame()&&(this.#n=t.data.url,await this.#a())}async#a(){if(this.dispatchEventToListeners("field-data-changed",void 0),!this.#r.get().enabled)return;const t=await this.getFieldDataForCurrentPage();this.dispatchEventToListeners("field-data-changed",t)}#s(t){const e=new URL(t);return e.hash="",e.search="",e}async#c(t,e,n){const{origin:r,href:i,hostname:o}=t;if("localhost"===o)return null;const s="origin"===e?this.#t:this.#e,c="origin"===e?`${r}-${n}`:`${i}-${n}`,g=s.get(c);if(void 0!==g)return g;try{const t="ALL"===n?void 0:n,o="origin"===e?await this.#d({origin:r,metrics:a,formFactor:t}):await this.#d({url:i,metrics:a,formFactor:t});return s.set(c,o),o}catch(t){return console.error(t),null}}async#d(t){const e=JSON.stringify(t),n=await fetch(this.#i,{method:"POST",body:e});if(!n.ok&&404!==n.status)throw new Error(`Failed to fetch data from CrUX server (Status code: ${n.status})`);const r=await n.json();if(404===n.status){if("NOT_FOUND"===r?.error?.status)return null;throw new Error(`Failed to fetch data from CrUX server (Status code: ${n.status})`)}if(!("record"in r))throw new Error(`Failed to find data in CrUX response: ${JSON.stringify(r)}`);return r}setEndpointForTesting(t){this.#i=t}}export{o as CrUXManager,r as DEVICE_SCOPE_LIST};
